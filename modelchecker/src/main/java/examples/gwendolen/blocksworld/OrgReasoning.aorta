options {
	[bel(me(Me), cap(R)), org(role(R,_))] => consider(rea(Me,R))
	[bel(me(Me)), org(role(R,Os), rea(Me,R), member(O,Os), objective(O))] => consider(objective(O))
}
actions {
	[opt(rea(A,R)), bel(me(A))] => enact(R)
	[opt(objective(O))] => commit(O)
	[goal(delegate(O)), bel(me(Me)), org(rea(Me,R1), dependency(R1,R2,O), rea(A,R2))] => sendonce(A,goal(O))
}
coordination {
	[+org(rea(A,R))] : [bel(agent(Ag))] => send(Ag, org(rea(A,R)))
	[+bel(X)]   	 : [bel(me(Me)), org(rea(Me,R2), dependency(R1,R2,X), objective(X), rea(A,R1))] => send(A, bel(X))
}